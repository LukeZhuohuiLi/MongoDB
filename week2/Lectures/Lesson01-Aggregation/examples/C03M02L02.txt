
________________________________________________________
#(Slide 3)
# include fields
db[:zips].find.aggregate([{:$project=>{ :_id=>1, :city=>1, :state=>1,:pop=>1 }},{:$limit=>5}]).each {|r| pp r}


________________________________________________________
#(Slide 4)
#exclude fields
db[:zips].find.aggregate(
  [{:$project=>{ :_id=>0, :state=>1,      
  :pop=>1 }},{:$limit=>5}]).each {|r|    
  pp r}


________________________________________________________
#(Slide 5)
# alter data
db[:zips].find.aggregate(
  [{:$project=>{:_id=>0,   
  :state=>{:$toLower=>'$state'},    
  :pop=>1 }},{:$limit=>5}]).each {|r|  
   pp r}
{"pop" => 4546, "state" => "ma"}
{"pop" => 10579, "state" => "ma"}

Passes along the documents with only the specified fields to the next stage in the pipeline
The specified fields can be existing fields from the input documents or newly computed fields
//exampe: from upper case to lower case

